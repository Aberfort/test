"use strict";var handleFormSubmit=window.handleFormSubmit,notifyDelay=1e4;$(".clients__container").owlCarousel({loop:!0,dots:!1,nav:!0,navText:["",""],autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!0,margin:10,responsive:{0:{items:1},768:{items:2,autoWidth:!0},1020:{items:3,autoWidth:!0},1280:{items:4}}}),$(".about__awards").owlCarousel({loop:!0,dots:!1,autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!0,nav:!0,navText:["",""],responsive:{0:{items:1},768:{items:3},1250:{items:4}}}),AOS.init(),$.validator.methods.number=function(e,t){return this.optional(t)||/^[0-9+\-() â€”]+$/.test(e)};var hide=function(e){return e.style.display="none"};function Notify(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Default message",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e3,a=document.querySelector(".notify"),n=document.createElement("div"),o=document.createTextNode(e),r=document.body;return a&&r.removeChild(a),n.classList.add("notify"),n.addEventListener("click",function(e){return e.target.style.opacity=0}),n.appendChild(o),setTimeout(function(){n.style.opacity=1,n.style.transform="translateY(0)"},300),setTimeout(function(){n.style.opacity=0,n.style.transform="translateY(200%)"},t),r.appendChild(n)}$("form").each(function(){$(this).validate({showErrors:function(e,t){e.attach&&Notify(uploadErrorMessage,notifyDelay),this.defaultShowErrors()},rules:{name:{required:!0,maxlength:255},last_name:{required:!0,maxlength:255},position:{required:!0,maxlength:255},company:{required:!0,maxlength:255},email:{required:!0,email:!0,maxlength:255},phone:{required:!0,number:!0,maxlength:255,minlength:5},description:{required:!1,maxlength:65535}},messages:{email:{email:"Please enter a valid email address."}},submitHandler:function(e,t){t.preventDefault();var a=new FormData(e),n=e.getAttribute("data-url"),o=e.querySelector(".registration__error");e.nextElementSibling;a.append("handler_id",e.dataset.handler),handleFormSubmit(n,a,{type:e.dataset.type}).then(function(e){e.data.status?($(".notification").show(),$("form").trigger("reset")):(o.textContent="Check selected fields, please.",show(o)),Object.keys(e.data).length>1&&Object.keys(e.data).map(function(e){var t=e.split("-")[1];return document.querySelector("[name="+t+"]").classList.add("has-error")})}).catch(function(e){console.log(e)})}})});var newsletter=document.querySelector(".newsletter"),newsletterOk=document.querySelectorAll(".popup-ok"),docHeight=document.querySelector("body").offsetHeight,triggerHeight=.75*docHeight-window.innerHeight,newsLetterKey="isNewsletter",twoWeeks=12096e5,dateNow=Date.now(),newsLetterShown={date:dateNow+twoWeeks,shown:!0};function showNewsletterPopup(){var e=JSON.parse(localStorage.getItem(newsLetterKey));if(!e||e.date<dateNow)return newsletter&&newsletter.classList.add("newsletter--show")}if(newsletterOk&&[].forEach.call(newsletterOk,function(e){e.addEventListener("click",function(){newsletter.classList.remove("newsletter--show"),localStorage.setItem(newsLetterKey,JSON.stringify(newsLetterShown))})}),window.addEventListener("scroll",function(){window.scrollY>triggerHeight&&showNewsletterPopup()}),$(document).on("click",'a[href^="#"]',function(e){e.preventDefault(),$("html, body").animate({scrollTop:$($.attr(this,"href")).offset().top},500)}),$(".footer__year").length){var currentYear=(new Date).getFullYear();$(".footer__year").text(currentYear)}$('html[lang="no"]').length&&($(".work__cta").addClass("work__cta--no"),$(".work__cta-title").addClass("work__cta-title--no"));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
