"use strict";function Notify(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Default message",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e3,n=document.querySelector(".notify"),o=document.createElement("div"),a=document.createTextNode(e),r=document.body;return n&&r.removeChild(n),o.classList.add("notify"),o.addEventListener("click",function(e){return e.target.style.opacity=0}),o.appendChild(a),setTimeout(function(){o.style.opacity=1,o.style.transform="translateY(0)"},300),setTimeout(function(){o.style.opacity=0,o.style.transform="translateY(200%)"},t),r.appendChild(o)}function showNewsletterPopup(){var e=JSON.parse(localStorage.getItem(newsLetterKey));if(!e||e.date<dateNow)return newsletter&&newsletter.classList.add("newsletter--show")}function fillInOwlInit(e,t,n,o,a,r,i,l,s,d,c,u,p,m,f){function h(){k=$(t+" .owl-dot"),k.length&&!c&&y()}function w(e){"position"===e.property.name&&(_=50),k.find("span").removeAttr("style"),_=0,C=1}function y(){var e=50/(60*i),t=1/(60*i);_+=e,C-=t,$(k[b()]).find("span").css({"border-color":"rgba("+l+", "+C+")"}),window.innerWidth<=599?$(k[v()]).find("span").css({"border-left":"solid "+_/2+"px rgba("+l+", 1)"}):$(k[v()]).find("span").css({"border-left":"solid "+_+"px rgba("+l+", 1)"}),_<50?S.push(requestAnimationFrame(y)):(g(),k[v()].click())}function g(){_=0,C=1,$(k[b()]).find("span").removeAttr("style"),$(k[v()]).find("span").css({"border-left":""}),k.one("click",function(){S.forEach(function(e){cancelAnimationFrame(e)}),S=[]})}function v(){var e=0;return $.each(k,function(t,n){if($(n).hasClass("active")&&t<k.length-1)return void(e=t+1)}),e}function b(){var e=k.length-1;return $.each(k,function(t,n){if($(n).hasClass("active")&&t<k.length-1)return void(e=t)}),e}var k=void 0,_=0,C=1,S=[];e.length>0&&e.owlCarousel({loop:u,lazyLoad:!0,margin:s,nav:c,items:o,dots:p,autoplay:n,autoplayTimeout:7e3,autoplaySpeed:2e3,smartSpeed:600,onInitialized:h,onChange:w,onChanged:h,responsive:{0:{items:d?2:1,margin:0,dots:f,nav:!1,loop:!0,autoplay:!1,autoplayTimeout:m},600:{items:d?r:a,margin:d?25:s},1e3:{items:r,margin:d?25:s}}})}$(document).ready(function(){var e=function(e){var t,n,o=window.location.search.substring(1),a=o.split("&");for(n=0;n<a.length;n++)if(t=a[n].split("="),t[0]===e)return void 0===t[1]||decodeURIComponent(t[1])},t=e("kw"),n=e("location");t&&n?$(".kw").append(t+" in "+n):t?$(".kw").append(t):n?$(".kw").append("Mobile App Development Company in "+n):$(".kw").append("Mobile App Development Company"),$("meta[name=description]").remove(),t?(document.title=t+" | Intellectsoft US",$("head").append('<meta name="description" content="Quickly build the team you need with our '+t+" in "+n+'. Employ the best app developers for your mobile app now.">')):(document.title="Mobile App Development Company | Intellectsoft US",$("head").append('<meta name="description" content="Quickly build the team you need with our Mobile App Development Company. Employ the best app developers for your mobile app now.">')),$(".video-play").vide("/static/7/images/video/video",{posterType:"jpg",className:"video-container"})}),$(".clients__container").owlCarousel({loop:!0,dots:!1,nav:!0,navText:["",""],autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!0,margin:10,responsive:{0:{items:1},768:{items:2,autoWidth:!0},1020:{items:3,autoWidth:!0},1280:{items:4}}}),$(".about__awards").owlCarousel({loop:!0,dots:!1,autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!0,nav:!0,navText:["",""],responsive:{0:{items:1},768:{items:3},1250:{items:4}}}),AOS.init();var newsletter=document.querySelector(".newsletter"),newsletterOk=document.querySelectorAll(".popup-ok"),docHeight=document.querySelector("body").offsetHeight,triggerHeight=.75*docHeight-window.innerHeight,newsLetterKey="isNewsletter",twoWeeks=12096e5,dateNow=Date.now(),newsLetterShown={date:dateNow+twoWeeks,shown:!0};if(newsletterOk&&[].forEach.call(newsletterOk,function(e){e.addEventListener("click",function(){newsletter.classList.remove("newsletter--show"),localStorage.setItem(newsLetterKey,JSON.stringify(newsLetterShown))})}),window.addEventListener("scroll",function(){window.scrollY>triggerHeight&&showNewsletterPopup()}),$(document).on("click",'a[href^="#"]',function(e){e.preventDefault(),$("html, body").animate({scrollTop:$($.attr(this,"href")).offset().top},500)}),$(".footer__year").length){var currentYear=(new Date).getFullYear();$(".footer__year").text(currentYear)}$('html[lang="no"]').length&&($(".work__cta").addClass("work__cta--no"),$(".work__cta-title").addClass("work__cta-title--no"),$(".competence__content").addClass("competence__content--no"));var owl=$("#ranking"),form=$("#formRanking");fillInOwlInit(owl,".ranking",!0,4,4,7,10,"0, 110, 250",5,!1,!1,!1,!0,2e3,!1,5),fillInOwlInit(form,".ranking-form",!1,4,2,3,6,"255, 255, 255",10,!0,!1,!1,!0,2e3,!0,9),$.validator.methods.number=function(e,t){return this.optional(t)||/^[0-9+\-() â€”]+$/.test(e)};var hide=function(e){return e.style.display="none"};$("form").each(function(){$(this).validate({showErrors:function(e,t){e.attach&&Notify(uploadErrorMessage,notifyDelay),this.defaultShowErrors()},rules:{name:{required:!0,maxlength:255},last_name:{required:!0,maxlength:255},position:{required:!0,maxlength:255},company:{required:!0,maxlength:255},email:{required:!0,email:!0,maxlength:255},phone:{required:!0,number:!0,maxlength:255,minlength:5},description:{required:!1,maxlength:65535}},messages:{email:{email:"Please enter a valid email address."}},submitHandler:function(e,t){t.preventDefault();var n=new FormData(e),o=e.getAttribute("data-url"),a=e.querySelector(".registration__error");e.nextElementSibling;n.append("handler_id",e.dataset.handler),handleFormSubmit(o,n,{type:e.dataset.type}).then(function(e){e.data.status?($(".notification").show(),$("form").trigger("reset")):(a.textContent="Check selected fields, please.",show(a)),Object.keys(e.data).length>1&&Object.keys(e.data).map(function(e){var t=e.split("-")[1];return document.querySelector("[name="+t+"]").classList.add("has-error")})}).catch(function(e){console.log(e)})}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
