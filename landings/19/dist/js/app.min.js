"use strict";var handleFormSubmit=window.handleFormSubmit,notifyDelay=1e4,owl=$(".owl-carousel");owl.owlCarousel({stagePadding:40,loop:!0,dots:!1,autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!0,margin:20,responsive:{0:{items:1},550:{items:2},900:{items:3},1250:{items:4}}}),$(".owl-item").click(function(){owl.trigger("next.owl.carousel")}),AOS.init(),$.validator.methods.number=function(e,t){return this.optional(t)||/^[0-9+\-() â€”]+$/.test(e)};var hide=function(e){return e.style.display="none"};function Notify(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Default message",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e3,n=document.querySelector(".notify"),r=document.createElement("div"),o=document.createTextNode(e),a=document.body;return n&&a.removeChild(n),r.classList.add("notify"),r.addEventListener("click",function(e){return e.target.style.opacity=0}),r.appendChild(o),setTimeout(function(){r.style.opacity=1,r.style.transform="translateY(0)"},300),setTimeout(function(){r.style.opacity=0,r.style.transform="translateY(200%)"},t),a.appendChild(r)}$("form").each(function(){$(this).validate({showErrors:function(e,t){e.attach&&Notify(uploadErrorMessage,notifyDelay),this.defaultShowErrors()},rules:{name:{required:!0,maxlength:255},last_name:{required:!0,maxlength:255},position:{required:!0,maxlength:255},company:{required:!0,maxlength:255},email:{required:!0,email:!0,maxlength:255},phone:{required:!0,number:!0,maxlength:255,minlength:5},description:{required:!1,maxlength:65535}},messages:{email:{email:"Please enter a valid email address."}},submitHandler:function(e,t){t.preventDefault();var n=new FormData(e),r=e.getAttribute("data-url"),o=e.querySelector(".registration__error");e.nextElementSibling;n.append("handler_id",e.dataset.handler),handleFormSubmit(r,n,{type:e.dataset.type}).then(function(e){e.data.status?($(".notification").show(),$("form").trigger("reset")):(o.textContent="Check selected fields, please.",show(o)),Object.keys(e.data).length>1&&Object.keys(e.data).map(function(e){var t=e.split("-")[1];return document.querySelector("[name="+t+"]").classList.add("has-error")})}).catch(function(e){console.log(e)})}})});var newsletter=document.querySelector(".newsletter"),newsletterOk=document.querySelectorAll(".popup-ok"),docHeight=document.querySelector("body").offsetHeight,triggerHeight=.75*docHeight-window.innerHeight,newsLetterKey="isNewsletter",twoWeeks=12096e5,dateNow=Date.now(),newsLetterShown={date:dateNow+twoWeeks,shown:!0};function showNewsletterPopup(){var e=JSON.parse(localStorage.getItem(newsLetterKey));if(!e||e.date<dateNow)return newsletter&&newsletter.classList.add("newsletter--show")}newsletterOk&&[].forEach.call(newsletterOk,function(e){e.addEventListener("click",function(){newsletter.classList.remove("newsletter--show"),localStorage.setItem(newsLetterKey,JSON.stringify(newsLetterShown))})}),window.addEventListener("scroll",function(){window.scrollY>triggerHeight&&showNewsletterPopup()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
